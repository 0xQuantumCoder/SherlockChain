digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
a = 0

IRs:
a(int128) := 0(uint256)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
b = 0

IRs:
b(int128) := 0(uint256)"];
2->3;
3[label="Node Type: IF 3

EXPRESSION:
x == b || x == a

IRs:
TMP_18(bool) = x == b
TMP_19(bool) = x == a
TMP_20(bool) = TMP_18 || TMP_19
CONDITION TMP_20"];
3->5[label="True"];
3->4[label="False"];
4[label="Node Type: END_IF 4
"];
4->6;
5[label="Node Type: RETURN 5

EXPRESSION:
True

IRs:
RETURN True"];
5->4;
6[label="Node Type: IF 6

EXPRESSION:
x != b && x != a

IRs:
TMP_21(bool) = x != b
TMP_22(bool) = x != a
TMP_23(bool) = TMP_21 && TMP_22
CONDITION TMP_23"];
6->8[label="True"];
6->7[label="False"];
7[label="Node Type: END_IF 7
"];
7->9;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
revert(string)(nope)

IRs:
TMP_24(None) = SOLIDITY_CALL revert(string)(nope)"];
8->7;
9[label="Node Type: RETURN 9

EXPRESSION:
False

IRs:
RETURN False"];
}
