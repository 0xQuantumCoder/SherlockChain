digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
a = 0

IRs:
a(int128) := 0(uint256)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
b = 0

IRs:
b(int128) := 0(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
(a,b) = self.foo()

IRs:
TUPLE_0(int128,int128) = INTERNAL_CALL, interface_conversion.foo()()
a(int128)= UNPACK TUPLE_0 index: 0 
b(int128)= UNPACK TUPLE_0 index: 1 "];
3->4;
4[label="Node Type: NEW VARIABLE 4

EXPRESSION:
x = 0x0000000000000000000000000000000000000000

IRs:
x(address) := 0(address)"];
4->5;
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
c = 0

IRs:
c(uint256) := 0(uint256)"];
5->6;
6[label="Node Type: EXPRESSION 6

EXPRESSION:
(a,c) = Test(x).foo()

IRs:
TMP_0 = CONVERT x to Test
TUPLE_1(int128,uint256) = HIGH_LEVEL_CALL, dest:TMP_0(Test), function:foo, arguments:[]  
a(int128)= UNPACK TUPLE_1 index: 0 
c(uint256)= UNPACK TUPLE_1 index: 1 "];
}
